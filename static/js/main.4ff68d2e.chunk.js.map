{"version":3,"sources":["assets/Icon.png","Components/Inputs/CustomInput.js","Containers/FormLayout.style.js","Components/Radios/CustomRadios.js","Components/Radios/CustomRadio.style.js","Components/Buttons/CustomButton.js","Containers/FormLayout.js","App.js","reportWebVitals.js","index.js"],"names":["withStyles","inputWidth","marginTop","width","fieldSelect","props","makeStyles","theme","root","margin","spacing","TextField","type","className","classes","id","label","textlabel","onChange","error","value","helperText","name","onBlur","inlineDisplay","display","marginHeight","FormControl","component","FormLabel","RadioGroup","FormControlLabel","control","Radio","CustomButton","Button","variant","fullWidth","validationSchema","yup","firstName","max","matches","required","lastName","email","password","min","gender","useStyles","minWidth","backgroundColor","maxWidth","paddingTop","boxShadow","bullet","transform","title","fontSize","pos","marginBottom","FormLayout","formik","useFormik","initialValues","onSubmit","values","alert","JSON","stringify","Card","CardContent","Typography","color","gutterBottom","src","Icon","alt","handleSubmit","handleChange","handleBlur","touched","Boolean","errors","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ff68d2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Icon.47fc3ec6.png\";","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {styles} from \"./../../Containers/FormLayout.style\";\r\n\r\nconst CustomInput=(props)=>{\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n          },\r\n        },\r\n      }));\r\n    return(\r\n        <div>\r\n <TextField type={props.type} className={props.classes.inputWidth} id=\"standard-basic\" label={props.textlabel} onChange={props.onChange} error={props.error} value={props.value} helperText={props.helperText} name={props.name} onBlur={props.onBlur}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(CustomInput);","export const styles = {\r\n    inputWidth:{\r\n        marginTop:\"5px\",\r\n        width:\"400px\"\r\n    },\r\n    fieldSelect:{\r\n    }\r\n  }","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { withStyles } from '@material-ui/core';\r\nimport {customRadioStyle} from '../Radios/CustomRadio.style';\r\nconst CustomRadio = (props) => {\r\n    return (\r\n        <FormControl component=\"fieldset\" className={props.classes.marginHeight}>\r\n            <FormLabel component=\"legend\">Gender</FormLabel>\r\n            <RadioGroup onBlur={props.onBlur} error={props.error} onChange={props.onChange}  name={props.name} className={props.classes.inlineDisplay} helperText={props.helperText}>\r\n                <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n\r\n    )\r\n}\r\nexport default withStyles(customRadioStyle)(CustomRadio);","export const customRadioStyle={\r\n    inlineDisplay:{\r\n        display:\"inline\"\r\n    },\r\n    marginHeight:{\r\n        marginTop:\"15px\"\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nconst CustomButton=()=>{\r\n    return(\r\n        <div>\r\n<Button variant=\"contained\" fullWidth type=\"submit\">Submit</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomButton;","import React from 'react';\r\nimport './FormLayout.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '../assets/Icon.png';\r\nimport { styles } from './FormLayout.style';\r\nimport CustomInput from '../Components/Inputs/CustomInput';\r\nimport { useFormik } from 'formik';\r\nimport CustomRadio from './../Components/Radios/CustomRadios';\r\nimport CustomButton from './../Components/Buttons/CustomButton';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    firstName: yup.string()\r\n        .max(25, 'Must be 15 characters or less').matches(/^[A-Za-z]+$/,\"Name cannot contain numbers\")\r\n        .required('Required'),\r\n    lastName: yup.string()\r\n        .max(20, 'Must be 20 characters or less')\r\n        .matches(/^[A-Za-z]+$/,\"Name cannot contain numbers\")\r\n        .required('Required'),\r\n    email: yup\r\n        .string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .required('Password is required'),\r\n    gender:yup.string().required('Select Gender')\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        backgroundColor: '#E0E5EC',\r\n        maxWidth: 580,\r\n        margin: '0 auto',\r\n        paddingTop: '20px',\r\n        boxShadow: '9px 9px 16px rgb(163,177,198,0.6), -9px -9px 16px  rgba(255,255,255, 0.5)'\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n\r\n    },\r\n});\r\nconst FormLayout = (props) => {\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>â€¢</span>;\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            gender: '',\r\n            email: '',\r\n            password: '',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: values=>{\r\nalert(JSON.stringify(values,null, 2))\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <Card className={classes.root}>\r\n                <CardContent >\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        <img src={Icon} alt=\"Icon Image\" />\r\n                    </Typography>\r\n                    <Typography variant=\"h4\" className={classes.pos} color=\"textSecondary\">\r\n                        PERSONAL DETAIL FORM\r\n                    </Typography>\r\n                    <form onSubmit={formik.handleSubmit }>\r\n                        <CustomInput id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            type=\"text\"\r\n                            textlabel=\"First Name\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.firstName}\r\n                            onBlur={formik.handleBlur}\r\n                            error={formik.touched.firstName && Boolean(formik.errors.firstName)}\r\n                            helperText={formik.touched.firstName && formik.errors.firstName}\r\n\r\n                        />\r\n\r\n\r\n                        <CustomInput id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            type=\"text\"\r\n                            textlabel=\"Last Name\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.lastName}\r\n                            onBlur={formik.handleBlur}\r\n                            error={formik.touched.lastName && Boolean(formik.errors.lastName)}\r\n                            helperText={formik.touched.lastName && formik.errors.lastName}\r\n\r\n                        />\r\n\r\n\r\n                        <CustomInput id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            textlabel=\"Email\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.email}\r\n                            onBlur={formik.handleBlur}\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n\r\n                        />\r\n\r\n\r\n                        <CustomInput id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            textlabel=\"Password\"\r\n                            onChange={formik.handleChange}\r\n                            value={formik.values.password}\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                        <CustomRadio onChange={formik.handleChange} name=\"gender\"  \r\n                        onBlur={formik.handleBlur}\r\n                        error={formik.touched.gender && Boolean(formik.errors.gender)}\r\n                        helperText={formik.touched.gender && formik.errors.gender} />\r\n                        <CustomButton onSubmit={formik.onSubmit}/>\r\n                    </form>\r\n                </CardContent>\r\n\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormLayout;","\nimport './App.css';\nimport ContainedButtons from './Containers/FormLayout'\nfunction App() {\n  return (\n    <div className=\"App\">\n     <ContainedButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}